name: Test Coverage

on:
  pull_request:
    branches: [main, master]
    paths:
      - "**.py"
      - "tests/**"
      - ".github/requirements/generate-test.txt"

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/requirements/generate-test.txt

      - name: Run coverage
        run: |
          coverage run -m pytest
          coverage report --fail-under=100 --show-missing

      - name: Generate coverage report
        if: failure()
        run: |
          coverage html
          coverage report --show-missing > coverage_report.txt

      - name: Create test files for uncovered lines
        if: failure()
        run: |
          python .github/scripts/generate_tests.py

      - name: Commit test files
        if: failure()
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tests/
          git commit -m "Add tests for uncovered lines" || true
          git push || true

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const coverageReport = fs.readFileSync('coverage_report.txt', 'utf8');
            const testFiles = fs.readFileSync('test_suggestions.txt', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Test Coverage Report\n\nSome lines are not covered by tests:\n\n\`\`\`\n${coverageReport}\n\`\`\`\n\nSuggested test files to add:\n\n\`\`\`python\n${testFiles}\n\`\`\``
            });
